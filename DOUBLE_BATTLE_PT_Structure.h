#pragma once

typedef struct _S_PT_DOUBLE_BATTLE_SEARCH_ROOM
{
} S_PT_DOUBLE_BATTLE_SEARCH_ROOM;

typedef struct _S_PT_DOUBLE_BATTLE_SEARCH_ROOM_SUCC_U
{
	DWORD_PTR ROOM_ID;
	INT ROOM_STATUS;
	INT CURRENT_USER_COUNT;
} S_PT_DOUBLE_BATTLE_SEARCH_ROOM_SUCC_U;

typedef struct _S_PT_DOUBLE_BATTLE_SEARCH_ROOM_FAIL_U
{
	DWORD ERROR_CODE;
} S_PT_DOUBLE_BATTLE_SEARCH_ROOM_FAIL_U;

typedef struct _S_PT_DOUBLE_BATTLE_UPDATE_USER_LIST_M
{
	INT LENGTH;
	CHAR USER_LIST[500];
	INT CURRENT_USER_COUNT;
} S_PT_DOUBLE_BATTLE_UPDATE_USER_LIST_M;

typedef struct _S_PT_DOUBLE_BATTLE_USER_LEAVE_M
{
	INT USER_ID;
} S_PT_DOUBLE_BATTLE_USER_LEAVE_M;

typedef struct _S_PT_DOUBLE_BATTLE_START_GAME_M
{
	INT64 START_TIME;
	INT ROOM_STATUS;
} S_PT_DOUBLE_BATTLE_START_GAME_M;

typedef struct _S_PT_DOUBLE_BATTLE_END_M
{
	INT USER_ID_1;
	INT SHOT_DOWN_PLANES_1;
	INT ALIVE_PLANES_1;
	INT USER_ID_2;
	INT SHOT_DOWN_PLANES_2;
	INT ALIVE_PLANES_2;
} S_PT_DOUBLE_BATTLE_END_M;

typedef struct _S_PT_DOUBLE_BATTLE_INSERT_JUNIOR_PLANE
{
	INT USER_ID;
	INT X;
	INT Y;
	INT ROTATION;
	INT HP;
	INT POWER;
} S_PT_DOUBLE_BATTLE_INSERT_JUNIOR_PLANE;

typedef struct _S_PT_DOUBLE_BATTLE_INSERT_JUNIOR_PLANE_SUCC_M
{
	INT USER_ID;
	INT X;
	INT Y;
	INT ROTATION;
	INT HP;
	INT PLANE_NO;
	INT POWER;
} S_PT_DOUBLE_BATTLE_INSERT_JUNIOR_PLANE_SUCC_M;

typedef struct _S_PT_DOUBLE_BATTLE_INSERT_JUNIOR_PLANE_FAIL_U
{
	DWORD ERROR_CODE;
} S_PT_DOUBLE_BATTLE_INSERT_JUNIOR_PLANE_FAIL_U;

typedef struct _S_PT_DOUBLE_BATTLE_INSERT_MIDDLE_PLANE
{
	INT USER_ID;
	INT X;
	INT Y;
	INT ROTATION;
	INT HP;
	INT POWER;
} S_PT_DOUBLE_BATTLE_INSERT_MIDDLE_PLANE;

typedef struct _S_PT_DOUBLE_BATTLE_INSERT_MIDDLE_PLANE_SUCC_M
{
	INT USER_ID;
	INT X;
	INT Y;
	INT ROTATION;
	INT HP;
	INT PLANE_NO;
	INT POWER;
} S_PT_DOUBLE_BATTLE_INSERT_MIDDLE_PLANE_SUCC_M;

typedef struct _S_PT_DOUBLE_BATTLE_INSERT_MIDDLE_PLANE_FAIL_U
{
	DWORD ERROR_CODE;
} S_PT_DOUBLE_BATTLE_INSERT_MIDDLE_PLANE_FAIL_U;

typedef struct _S_PT_DOUBLE_BATTLE_INSERT_SENIOR_PLANE
{
	INT USER_ID;
	INT X;
	INT Y;
	INT ROTATION;
	INT HP;
	INT POWER;
} S_PT_DOUBLE_BATTLE_INSERT_SENIOR_PLANE;

typedef struct _S_PT_DOUBLE_BATTLE_INSERT_SENIOR_PLANE_SUCC_M
{
	INT USER_ID;
	INT X;
	INT Y;
	INT ROTATION;
	INT HP;
	INT PLANE_NO;
	INT POWER;
} S_PT_DOUBLE_BATTLE_INSERT_SENIOR_PLANE_SUCC_M;

typedef struct _S_PT_DOUBLE_BATTLE_INSERT_SENIOR_PLANE_FAIL_U
{
	DWORD ERROR_CODE;
} S_PT_DOUBLE_BATTLE_INSERT_SENIOR_PLANE_FAIL_U;

typedef struct _S_PT_DOUBLE_BATTLE_INSERT_JUNIOR_STEALTH_PLANE
{
	INT USER_ID;
	INT X;
	INT Y;
	INT ROTATION;
	INT HP;
	INT POWER;
} S_PT_DOUBLE_BATTLE_INSERT_JUNIOR_STEALTH_PLANE;

typedef struct _S_PT_DOUBLE_BATTLE_INSERT_JUNIOR_STEALTH_PLANE_SUCC_M
{
	INT USER_ID;
	INT X;
	INT Y;
	INT ROTATION;
	INT HP;
	INT PLANE_NO;
	INT POWER;
} S_PT_DOUBLE_BATTLE_INSERT_JUNIOR_STEALTH_PLANE_SUCC_M;

typedef struct _S_PT_DOUBLE_BATTLE_INSERT_JUNIOR_STEALTH_PLANE_FAIL_U
{
	DWORD ERROR_CODE;
} S_PT_DOUBLE_BATTLE_INSERT_JUNIOR_STEALTH_PLANE_FAIL_U;

typedef struct _S_PT_DOUBLE_BATTLE_INSERT_MIDDLE_STEALTH_PLANE
{
	INT USER_ID;
	INT X;
	INT Y;
	INT ROTATION;
	INT HP;
	INT POWER;
} S_PT_DOUBLE_BATTLE_INSERT_MIDDLE_STEALTH_PLANE;

typedef struct _S_PT_DOUBLE_BATTLE_INSERT_MIDDLE_STEALTH_PLANE_SUCC_M
{
	INT USER_ID;
	INT X;
	INT Y;
	INT ROTATION;
	INT HP;
	INT PLANE_NO;
	INT POWER;
} S_PT_DOUBLE_BATTLE_INSERT_MIDDLE_STEALTH_PLANE_SUCC_M;

typedef struct _S_PT_DOUBLE_BATTLE_INSERT_MIDDLE_STEALTH_PLANE_FAIL_U
{
	DWORD ERROR_CODE;
} S_PT_DOUBLE_BATTLE_INSERT_MIDDLE_STEALTH_PLANE_FAIL_U;

typedef struct _S_PT_DOUBLE_BATTLE_INSERT_SENIOR_STEALTH_PLANE
{
	INT USER_ID;
	INT X;
	INT Y;
	INT ROTATION;
	INT HP;
	INT POWER;
} S_PT_DOUBLE_BATTLE_INSERT_SENIOR_STEALTH_PLANE;

typedef struct _S_PT_DOUBLE_BATTLE_INSERT_SENIOR_STEALTH_PLANE_SUCC_M
{
	INT USER_ID;
	INT X;
	INT Y;
	INT ROTATION;
	INT HP;
	INT PLANE_NO;
	INT POWER;
} S_PT_DOUBLE_BATTLE_INSERT_SENIOR_STEALTH_PLANE_SUCC_M;

typedef struct _S_PT_DOUBLE_BATTLE_INSERT_SENIOR_STEALTH_PLANE_FAIL_U
{
	DWORD ERROR_CODE;
} S_PT_DOUBLE_BATTLE_INSERT_SENIOR_STEALTH_PLANE_FAIL_U;

typedef struct _S_PT_DOUBLE_BATTLE_INSERT_SENIOR_ANTI_STEALTH_RADAR
{
	INT USER_ID;
	INT X;
	INT Y;
	INT LENGTH;
	INT WIDTH;
	INT DURATION;
	INT POWER;
} S_PT_DOUBLE_BATTLE_INSERT_SENIOR_ANTI_STEALTH_RADAR;

typedef struct _S_PT_DOUBLE_BATTLE_INSERT_SENIOR_ANTI_STEALTH_RADAR_SUCC_M
{
	INT USER_ID;
	INT X;
	INT Y;
	INT LENGTH;
	INT WIDTH;
	INT DURATION;
	INT RADAR_NO;
	INT POWER;
} S_PT_DOUBLE_BATTLE_INSERT_SENIOR_ANTI_STEALTH_RADAR_SUCC_M;

typedef struct _S_PT_DOUBLE_BATTLE_INSERT_SENIOR_ANTI_STEALTH_RADAR_FAIL_U
{
	DWORD ERROR_CODE;
} S_PT_DOUBLE_BATTLE_INSERT_SENIOR_ANTI_STEALTH_RADAR_FAIL_U;

typedef struct _S_PT_DOUBLE_BATTLE_INSERT_MIDDLE_ANTI_STEALTH_RADAR
{
	INT USER_ID;
	INT X;
	INT Y;
	INT LENGTH;
	INT WIDTH;
	INT DURATION;
	INT POWER;
} S_PT_DOUBLE_BATTLE_INSERT_MIDDLE_ANTI_STEALTH_RADAR;

typedef struct _S_PT_DOUBLE_BATTLE_INSERT_MIDDLE_ANTI_STEALTH_RADAR_SUCC_M
{
	INT USER_ID;
	INT X;
	INT Y;
	INT LENGTH;
	INT WIDTH;
	INT DURATION;
	INT RADAR_NO;
	INT POWER;
} S_PT_DOUBLE_BATTLE_INSERT_MIDDLE_ANTI_STEALTH_RADAR_SUCC_M;

typedef struct _S_PT_DOUBLE_BATTLE_INSERT_MIDDLE_ANTI_STEALTH_RADAR_FAIL_U
{
	DWORD ERROR_CODE;
} S_PT_DOUBLE_BATTLE_INSERT_MIDDLE_ANTI_STEALTH_RADAR_FAIL_U;

typedef struct _S_PT_DOUBLE_BATTLE_INSERT_JUNIOR_ANTI_STEALTH_RADAR
{
	INT USER_ID;
	INT X;
	INT Y;
	INT LENGTH;
	INT WIDTH;
	INT DURATION;
	INT POWER;
} S_PT_DOUBLE_BATTLE_INSERT_JUNIOR_ANTI_STEALTH_RADAR;

typedef struct _S_PT_DOUBLE_BATTLE_INSERT_JUNIOR_ANTI_STEALTH_RADAR_SUCC_M
{
	INT USER_ID;
	INT X;
	INT Y;
	INT LENGTH;
	INT WIDTH;
	INT DURATION;
	INT RADAR_NO;
	INT POWER;
} S_PT_DOUBLE_BATTLE_INSERT_JUNIOR_ANTI_STEALTH_RADAR_SUCC_M;

typedef struct _S_PT_DOUBLE_BATTLE_INSERT_JUNIOR_ANTI_STEALTH_RADAR_FAIL_U
{
	DWORD ERROR_CODE;
} S_PT_DOUBLE_BATTLE_INSERT_JUNIOR_ANTI_STEALTH_RADAR_FAIL_U;

typedef struct _S_PT_DOUBLE_BATTLE_INSERT_SENIOR_MISSILE
{
	INT USER_ID;
	INT X;
	INT Y;
	INT LENGTH;
	INT WIDTH;
	INT DP;
	INT POWER;
} S_PT_DOUBLE_BATTLE_INSERT_SENIOR_MISSILE;

typedef struct _S_PT_DOUBLE_BATTLE_INSERT_SENIOR_MISSILE_SUCC_M
{
	INT USER_ID;
	INT X;
	INT Y;
	INT LENGTH;
	INT WIDTH;
	INT DP;
	INT NUM_SHOT_DOWN;
	BYTE NO_SHOT_DOWN[20];
	INT EXPOLSION_NO;
	INT POWER;
} S_PT_DOUBLE_BATTLE_INSERT_SENIOR_MISSILE_SUCC_M;

typedef struct _S_PT_DOUBLE_BATTLE_INSERT_SENIOR_MISSILE_FAIL_U
{
	DWORD ERROR_CODE;
} S_PT_DOUBLE_BATTLE_INSERT_SENIOR_MISSILE_FAIL_U;

typedef struct _S_PT_DOUBLE_BATTLE_INSERT_MIDDLE_MISSILE
{
	INT USER_ID;
	INT X;
	INT Y;
	INT LENGTH;
	INT WIDTH;
	INT DP;
	INT POWER;
} S_PT_DOUBLE_BATTLE_INSERT_MIDDLE_MISSILE;

typedef struct _S_PT_DOUBLE_BATTLE_INSERT_MIDDLE_MISSILE_SUCC_M
{
	INT USER_ID;
	INT X;
	INT Y;
	INT LENGTH;
	INT WIDTH;
	INT DP;
	INT NUM_SHOT_DOWN;
	BYTE NO_SHOT_DOWN[20];
	INT EXPOLSION_NO;
	INT POWER;
} S_PT_DOUBLE_BATTLE_INSERT_MIDDLE_MISSILE_SUCC_M;

typedef struct _S_PT_DOUBLE_BATTLE_INSERT_MIDDLE_MISSILE_FAIL_U
{
	DWORD ERROR_CODE;
} S_PT_DOUBLE_BATTLE_INSERT_MIDDLE_MISSILE_FAIL_U;

typedef struct _S_PT_DOUBLE_BATTLE_INSERT_JUNIOR_MISSILE
{
	INT USER_ID;
	INT X;
	INT Y;
	INT LENGTH;
	INT WIDTH;
	INT DP;
	INT POWER;
} S_PT_DOUBLE_BATTLE_INSERT_JUNIOR_MISSILE;

typedef struct _S_PT_DOUBLE_BATTLE_INSERT_JUNIOR_MISSILE_SUCC_M
{
	INT USER_ID;
	INT X;
	INT Y;
	INT LENGTH;
	INT WIDTH;
	INT DP;
	INT NUM_SHOT_DOWN;
	BYTE NO_SHOT_DOWN[20];
	INT EXPOLSION_NO;
	INT POWER;
} S_PT_DOUBLE_BATTLE_INSERT_JUNIOR_MISSILE_SUCC_M;

typedef struct _S_PT_DOUBLE_BATTLE_INSERT_JUNIOR_MISSILE_FAIL_U
{
	DWORD ERROR_CODE;
} S_PT_DOUBLE_BATTLE_INSERT_JUNIOR_MISSILE_FAIL_U;

typedef struct _S_PT_DOUBLE_BATTLE_INSERT_SENIOR_RADAR
{
	INT USER_ID;
	INT X;
	INT Y;
	INT LENGTH;
	INT WIDTH;
	INT DURATION;
	INT POWER;
} S_PT_DOUBLE_BATTLE_INSERT_SENIOR_RADAR;

typedef struct _S_PT_DOUBLE_BATTLE_INSERT_SENIOR_RADAR_SUCC_M
{
	INT USER_ID;
	INT X;
	INT Y;
	INT LENGTH;
	INT WIDTH;
	INT DURATION;
	INT RADAR_NO;
	INT POWER;
} S_PT_DOUBLE_BATTLE_INSERT_SENIOR_RADAR_SUCC_M;

typedef struct _S_PT_DOUBLE_BATTLE_INSERT_SENIOR_RADAR_FAIL_U
{
	DWORD ERROR_CODE;
} S_PT_DOUBLE_BATTLE_INSERT_SENIOR_RADAR_FAIL_U;

typedef struct _S_PT_DOUBLE_BATTLE_INSERT_MIDDLE_RADAR
{
	INT USER_ID;
	INT X;
	INT Y;
	INT LENGTH;
	INT WIDTH;
	INT DURATION;
	INT POWER;
} S_PT_DOUBLE_BATTLE_INSERT_MIDDLE_RADAR;

typedef struct _S_PT_DOUBLE_BATTLE_INSERT_MIDDLE_RADAR_SUCC_M
{
	INT USER_ID;
	INT X;
	INT Y;
	INT LENGTH;
	INT WIDTH;
	INT DURATION;
	INT RADAR_NO;
	INT POWER;
} S_PT_DOUBLE_BATTLE_INSERT_MIDDLE_RADAR_SUCC_M;

typedef struct _S_PT_DOUBLE_BATTLE_INSERT_MIDDLE_RADAR_FAIL_U
{
	DWORD ERROR_CODE;
} S_PT_DOUBLE_BATTLE_INSERT_MIDDLE_RADAR_FAIL_U;

typedef struct _S_PT_DOUBLE_BATTLE_INSERT_JUNIOR_RADAR
{
	INT USER_ID;
	INT X;
	INT Y;
	INT LENGTH;
	INT WIDTH;
	INT DURATION;
	INT POWER;
} S_PT_DOUBLE_BATTLE_INSERT_JUNIOR_RADAR;

typedef struct _S_PT_DOUBLE_BATTLE_INSERT_JUNIOR_RADAR_SUCC_M
{
	INT USER_ID;
	INT X;
	INT Y;
	INT LENGTH;
	INT WIDTH;
	INT DURATION;
	INT RADAR_NO;
	INT POWER;
} S_PT_DOUBLE_BATTLE_INSERT_JUNIOR_RADAR_SUCC_M;

typedef struct _S_PT_DOUBLE_BATTLE_INSERT_JUNIOR_RADAR_FAIL_U
{
	DWORD ERROR_CODE;
} S_PT_DOUBLE_BATTLE_INSERT_JUNIOR_RADAR_FAIL_U;

typedef struct _S_PT_DOUBLE_BATTLE_INSERT_SENIOR_CANNONBALL
{
	INT USER_ID;
	INT X;
	INT Y;
	INT LENGTH;
	INT WIDTH;
	INT DP;
	INT POWER;
} S_PT_DOUBLE_BATTLE_INSERT_SENIOR_CANNONBALL;

typedef struct _S_PT_DOUBLE_BATTLE_INSERT_SENIOR_CANNONBALL_SUCC_M
{
	INT USER_ID;
	INT X;
	INT Y;
	INT LENGTH;
	INT WIDTH;
	INT DP;
	INT NUM_SHOT_DOWN;
	BYTE NO_SHOT_DOWN[20];
	INT EXPLOSION_NO;
	INT POWER;
} S_PT_DOUBLE_BATTLE_INSERT_SENIOR_CANNONBALL_SUCC_M;

typedef struct _S_PT_DOUBLE_BATTLE_INSERT_SENIOR_CANNONBALL_FAIL_U
{
	DWORD ERROR_CODE;
} S_PT_DOUBLE_BATTLE_INSERT_SENIOR_CANNONBALL_FAIL_U;

typedef struct _S_PT_DOUBLE_BATTLE_INSERT_MIDDLE_CANNONBALL
{
	INT USER_ID;
	INT X;
	INT Y;
	INT LENGTH;
	INT WIDTH;
	INT DP;
	INT POWER;
} S_PT_DOUBLE_BATTLE_INSERT_MIDDLE_CANNONBALL;

typedef struct _S_PT_DOUBLE_BATTLE_INSERT_MIDDLE_CANNONBALL_SUCC_M
{
	INT USER_ID;
	INT X;
	INT Y;
	INT LENGTH;
	INT WIDTH;
	INT DP;
	INT NUM_SHOT_DOWN;
	BYTE NO_SHOT_DOWN[20];
	INT EXPLOSION_NO;
	INT POWER;
} S_PT_DOUBLE_BATTLE_INSERT_MIDDLE_CANNONBALL_SUCC_M;

typedef struct _S_PT_DOUBLE_BATTLE_INSERT_MIDDLE_CANNONBALL_FAIL_U
{
	DWORD ERROR_CODE;
} S_PT_DOUBLE_BATTLE_INSERT_MIDDLE_CANNONBALL_FAIL_U;

typedef struct _S_PT_DOUBLE_BATTLE_INSERT_JUNIOR_CANNONBALL
{
	INT USER_ID;
	INT X;
	INT Y;
	INT LENGTH;
	INT WIDTH;
	INT DP;
	INT POWER;
} S_PT_DOUBLE_BATTLE_INSERT_JUNIOR_CANNONBALL;

typedef struct _S_PT_DOUBLE_BATTLE_INSERT_JUNIOR_CANNONBALL_SUCC_M
{
	INT USER_ID;
	INT X;
	INT Y;
	INT LENGTH;
	INT WIDTH;
	INT DP;
	INT NUM_SHOT_DOWN;
	BYTE NO_SHOT_DOWN[20];
	INT EXPLOSION_NO;
	INT POWER;
} S_PT_DOUBLE_BATTLE_INSERT_JUNIOR_CANNONBALL_SUCC_M;

typedef struct _S_PT_DOUBLE_BATTLE_INSERT_JUNIOR_CANNONBALL_FAIL_U
{
	DWORD ERROR_CODE;
} S_PT_DOUBLE_BATTLE_INSERT_JUNIOR_CANNONBALL_FAIL_U;

typedef struct _S_PT_DOUBLE_BATTLE_UPDATE_U
{
	INT USER_ID;
	INT CURRENT_TIME;
	INT FALL_PLANE_NUM;
	BYTE PLANE_NO_BUFFER[40];
	INT DISABLE_RADAR_NUM;
	BYTE RADAR_NO_BUFFER[40];
	INT DISAPPEAR_EXPLOSION_NUM;
	BYTE EXPLOSION_NO_BUFFER[40];
	BYTE POWER_BUFFER[16];
} S_PT_DOUBLE_BATTLE_UPDATE_U;

